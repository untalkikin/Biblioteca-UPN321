# Generated by Django 5.2.6 on 2025-10-10 01:03

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BibliographicRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=512)),
                ('subtitle', models.CharField(blank=True, max_length=512)),
                ('resource_type', models.CharField(choices=[('book', 'Libro'), ('thesis', 'Tesis'), ('article', 'Articulo'), ('report', 'Reporte'), ('audio', 'Audio'), ('video', 'Video'), ('other', 'Otro')], default='book', max_length=20)),
                ('edition', models.CharField(blank=True, max_length=128)),
                ('language', models.CharField(blank=True, max_length=64)),
                ('publish_year', models.PositiveIntegerField(blank=True, null=True)),
                ('publish_place', models.CharField(blank=True, max_length=255)),
                ('lcc_code', models.CharField(blank=True, db_index=True, help_text='Código de la Clasificación de la Library of Congress.', max_length=32, null=True, validators=[django.core.validators.RegexValidator(message="Formato LCC inválido (ej. 'QA76.73 .P98 2023').", regex='^[A-Z]{1,3}\\s?\\d{1,4}(\\.\\d+)?(\\s?[A-Z]\\d+)?(\\s?\\.\\w+)?(\\s?\\d{4})?$')], verbose_name='Clasificación LCC')),
                ('lcc_source', models.CharField(blank=True, help_text='Origen: heurística, asignación manual, importación, etc.', max_length=64, null=True)),
                ('isbn', models.CharField(blank=True, max_length=32, null=True)),
                ('issn', models.CharField(blank=True, max_length=32, null=True)),
                ('iccn', models.CharField(blank=True, max_length=32, null=True)),
                ('call_number', models.CharField(blank=True, help_text='Signatura LCC completa, ej: QA76.73.P98 D45 2021', max_length=128)),
                ('lcc_class', models.CharField(blank=True, max_length=2)),
                ('lcc_number', models.CharField(blank=True, max_length=16)),
                ('cutter', models.CharField(blank=True, max_length=32)),
                ('cutter2', models.CharField(blank=True, max_length=32)),
                ('physical_description', models.CharField(blank=True, max_length=255)),
                ('series', models.CharField(blank=True, max_length=255)),
                ('notes', models.TextField(blank=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='covers/')),
                ('inventory_code', models.CharField(blank=True, max_length=64, unique=True)),
                ('qr_image', models.ImageField(blank=True, null=True, upload_to='qr/')),
            ],
            options={
                'ordering': ['lcc_class', 'lcc_number', 'cutter', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('authors', models.CharField(help_text="Formato sugerido: 'Apellido, Nombre; Apellido2, Nombre2'", max_length=512)),
                ('pub_year', models.PositiveIntegerField(blank=True, null=True)),
                ('subjects_input', models.TextField(blank=True, help_text="Temas separados por ';' (ej. 'Educación; Metodología de la investigación')")),
                ('cutter1', models.CharField(blank=True, max_length=16)),
                ('cutter2', models.CharField(blank=True, max_length=16)),
                ('call_lcc', models.CharField(blank=True, max_length=64)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('given', models.CharField(blank=True, max_length=255, verbose_name='Nombres')),
                ('family', models.CharField(blank=True, max_length=255, verbose_name='Apellidos')),
                ('full_name', models.CharField(max_length=255, unique=True)),
                ('VIAF', models.CharField(blank=True, max_length=50)),
                ('ORCID', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('place', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('term', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('barcode', models.CharField(max_length=64, unique=True)),
                ('status', models.CharField(choices=[('available', 'Disponible'), ('loaned', 'Prestado'), ('repair', 'En reparacion'), ('lost', 'Perdido')], default='available', max_length=20)),
                ('acquisition_date', models.DateField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('qr_image', models.ImageField(blank=True, null=True, upload_to='qrcodes/')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='catalog.bibliographicrecord')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='bibliographicrecord',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.publisher'),
        ),
        migrations.AddField(
            model_name='bibliographicrecord',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='catalog.subject'),
        ),
        migrations.CreateModel(
            name='RecordContributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('author', 'Autor'), ('editor', 'Editor'), ('translator', 'Traductor'), ('compiler', 'Compilador')], default='author', max_length=20)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.person')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributors', to='catalog.bibliographicrecord')),
            ],
            options={
                'unique_together': {('record', 'person', 'role')},
            },
        ),
        migrations.AddIndex(
            model_name='bibliographicrecord',
            index=models.Index(fields=['lcc_class', 'lcc_number', 'cutter'], name='catalog_bib_lcc_cla_e35ac4_idx'),
        ),
    ]
